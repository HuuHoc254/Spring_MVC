<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.example.demo.repository.OrderMapper" >
	<select id="countSearch" resultType="int">
	   	SELECT 
	   		COUNT(*)
	    FROM
	    	orders o
	    JOIN products 	p ON p.product_id 	= o.product_id
	    JOIN account 	a ON a.account_id 	= o.account_id
	    JOIN customer 	c ON c.customer_id 	= o.customer_id
	    <where>
	    	(
			#{isAdmin} 
			OR o.account_id = #{accountId} )
	        <if test="accountName != null">
	            AND a.account_name LIKE CONCAT(#{accountName}, '%')
	        </if>
	        <if test="fullName != null">
	            AND a.full_name LIKE CONCAT(#{fullName}, '%')
	        </if>
	        <if test="productCode != null">
	            AND p.product_code LIKE CONCAT(#{productCode}, '%')
	        </if>
	        <if test="productName != null">
	            AND p.product_name LIKE CONCAT(#{productName}, '%')
	        </if>
	        <if test="customerName != null">
	            AND c.customer_name LIKE CONCAT(#{customerName}, '%')
	        </if>
	        <if test="phoneNumber != null">
	            AND o.phone_number_customer LIKE CONCAT(#{phoneNumber}, '%')
	        </if>
	        <if test="beginOrderDate != ''">
	            AND o.order_date &gt; #{beginOrderDate}
	        </if>
	        <if test="endOrderDate != ''">
	            AND o.order_date &lt; #{endOrderDate}
	        </if>
	        <if test="orderStatus and !allocationStatus">
	            AND o.order_status_id = 1
	        </if>
	        <if test="!orderStatus and allocationStatus">
	            AND o.order_status_id = 2
	        </if>
	    </where>
	</select>

	<select id="search" resultType="java.util.Map">
	   	SELECT 
	   		 o.order_id
  		,	 o.order_date
	    ,	 o.unit_price
	    ,	 o.quantity
	    ,	 o.phone_number_customer
	    ,	 o.address_customer
	    ,	 o.allocation_date
	    ,	 o.version
	    ,	 p.product_code
	    ,	 p.product_name
	    ,	 c.customer_name
	    ,	 a.account_name
	    ,	 a.full_name
	    ,	 ost.order_status_name
	    
	    FROM
	    	orders o
	    JOIN products 	p ON p.product_id 	= o.product_id
	    JOIN account 	a ON a.account_id 	= o.account_id
	    JOIN customer 	c ON c.customer_id 	= o.customer_id
	    JOIN order_status ost ON ost.order_status_id = o.order_status_id
	    <where>
	    	(
			#{isAdmin} 
			OR o.account_id = #{accountId} )
	        <if test="accountName != null">
	            AND a.account_name LIKE CONCAT(#{accountName}, '%')
	        </if>
	        <if test="fullName != null">
	            AND a.full_name LIKE CONCAT(#{fullName}, '%')
	        </if>
	        <if test="productCode != null">
	            AND p.product_code LIKE CONCAT(#{productCode}, '%')
	        </if>
	        <if test="productName != null">
	            AND p.product_name LIKE CONCAT(#{productName}, '%')
	        </if>
	        <if test="customerName != null">
	            AND c.customer_name LIKE CONCAT(#{customerName}, '%')
	        </if>
	        <if test="phoneNumber != null">
	            AND o.phone_number_customer LIKE CONCAT(#{phoneNumber}, '%')
	        </if>
	        <if test="beginOrderDate != ''">
	            AND o.order_date &gt; #{beginOrderDate}
	        </if>
	        <if test="endOrderDate != ''">
	            AND o.order_date &lt; #{endOrderDate}
	        </if>
	        <if test="orderStatus and !allocationStatus">
	            AND o.order_status_id = 1
	        </if>
	        <if test="!orderStatus and allocationStatus">
	            AND o.order_status_id = 2
	        </if>
	    </where>
	    ORDER BY
	    	o.order_date DESC
    	LIMIT 3
	    OFFSET #{offset}
	</select>
	<update id="updateOrder">
		UPDATE
			orders
		JOIN   products    	p ON p.product_id   = o.product_id
		JOIN   customer   	c ON c.customer_id  = o.customer_id
		SET
			o.product_id	= #{beginOrderDate}
			customer_name
	</update>
  </mapper>