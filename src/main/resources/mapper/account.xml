<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.example.demo.repository.AccountMapper" >
	<select id="findByAccountName" resultType="java.util.Map">
	    SELECT
	    	  a.id 
	    	, a.name
	    	, a.password
	    	, a.is_deleted
	    	, r.id
	    	, r.name
	    FROM
	    	accounts a
	    JOIN
	    	roles r ON r.id = a.role_id 
	    <where>
    		name = #{name}
	    </where>
	</select>
	
	<select id="findById" resultType="java.util.Map">
	    SELECT 
	    	id, name, full_name, phone, version
	    FROM
	    	accounts
	    <where>
	    		is_deleted = FALSE
	    	AND id = #{id} 
	    </where>
	</select>

	<update id="setOnline">
		UPDATE
			accounts
		SET
			is_online = NOT is_online
		<where>
			id = #{id}
		</where>
	</update>

	<select id="countSearch" resultType="int">
	   	SELECT 
	   		COUNT(*)
	    FROM
	    	accounts
	    <where>
	    	is_deleted = false
	        <if test="name != null">
	            AND name LIKE CONCAT(#{name}, '%')
	        </if>
	        <if test="name != null">
	            AND full_name LIKE CONCAT(#{fullName}, '%')
	        </if>
	        <if test="number != null">
	            AND phone LIKE CONCAT(#{phone}, '%')
	        </if>
	    </where>
	</select>

	<select id="search" resultType="java.util.Map">
	    SELECT 
	    	id, name, full_name, phone, is_online
	    FROM
	    	accounts
	    <where>
	    	is_deleted = false
	        <if test="name != null">
	            AND name LIKE CONCAT(#{name}, '%')
	        </if>
	        <if test="fullName != null">
	            AND full_name LIKE CONCAT(#{fullName}, '%')
	        </if>
	        <if test="phone != null">
	            AND phone LIKE CONCAT(#{phone}, '%')
	        </if>
	    </where>
	    ORDER BY
    	 	SUBSTRING_INDEX(full_name, ' ', -1)
	    LIMIT 3
	    OFFSET #{offset}
	</select>

	<select id="existsByName" resultType="int">
	    SELECT 
	    	COUNT(*)
	    FROM
	    	accounts
	    <where>
	    	name = #{name} 
	    </where>
	</select>

	<select id="existsByPhone" resultType="int">
	    SELECT 
	    	COUNT(*)
	    FROM
	    	accounts
	    <where>
	    	phone = #{phone}
	    </where>
	</select>

	<select id="existsByNameNotId" resultType="int">
	    SELECT 
	    	COUNT(*)
	    FROM
	    	accounts
	    <where>
	    	name = #{name}
    	AND id != #{id} 
	    </where>
	</select>

	<select id="existsByPhoneNotId" resultType="int">
	    SELECT 
	    	COUNT(*)
	    FROM
	    	accounts
	    <where>
	    	phone = #{phone}
	    AND id != #{id} 
	    </where>
	</select>
	
	<insert id="insertAccount">
		INSERT INTO
				accounts( name, password, full_name, phone, role_id)
		VALUES
				(#{name},#{password},#{fullName},#{phone},2)
	</insert>

	<update id="updateAccount">
		UPDATE
			accounts
		SET
				account_name 	= #{name}
			, 	password 		= #{password}
			, 	full_name 		= #{fullName}
			, 	phone			= #{phone}
			, 	version 		= version + 1
		<where>
				id 				= #{id}
			AND	version 		= #{version}
		</where>
	</update>

	<update id="deleteAccount">
		UPDATE
			account
		SET
				is_deleted 	= TRUE
			, 	version 	= version + 1
		<where>
				id 			= #{Id}
		</where>
	</update>
  </mapper>